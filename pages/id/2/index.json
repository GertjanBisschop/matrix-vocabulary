{
    "identifier": "test/6cd1a5b9d516e9a46993",
    "name": "User",
    "schema": {
      "type": "object",
      "required": [
        "id",
        "username",
        "password"
      ],
      "properties": {
        "id": {
          "type": "string",
          "cordra": {
            "type": {
              "autoGeneratedField": "handle"
            }
          }
        },
        "username": {
          "type": "string",
          "title": "Username",
          "cordra": {
            "preview": {
              "showInPreview": true,
              "isPrimary": true
            },
            "auth": "username"
          }
        },
        "password": {
          "type": "string",
          "format": "password",
          "title": "Password",
          "cordra": {
            "auth": "password"
          }
        },
        "requirePasswordChange": {
          "type": "boolean",
          "title": "Require Password Change",
          "description": "If true a new password must be set on next authentication.",
          "cordra": {
            "auth": "requirePasswordChange"
          }
        }
      }
    },
    "javascript": "exports.beforeSchemaValidation = beforeSchemaValidation;\n\nfunction beforeSchemaValidation(obj, context) {\n    if (!context.useLegacyContentOnlyJavaScriptHooks) {\n        obj.content = beforeSchemaValidationLegacy(obj.content, context);\n        return obj;\n    } else {\n        return beforeSchemaValidationLegacy(obj, context);\n    }\n}\n\nfunction beforeSchemaValidationLegacy(obj, context) {\n    if (!obj.id) obj.id = \"\";\n    if (!obj.password) obj.password = \"\";\n    var password = obj.password;\n    if (context.isNew || password) {\n        if (password.length \u003C 8) {\n            throw \"Password is too short. Min length 8 characters\";\n        }\n    }\n    return obj;\n}\n"
  }